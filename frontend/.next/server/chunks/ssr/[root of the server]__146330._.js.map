{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///Users/darshan.he/temp/sam/frontend/src/components/ImageGrid.tsx"],"sourcesContent":["import React from 'react';\nimport './ImageGrid.css'; // Import custom CSS\n\ntype ImageItem = {\n  id: number;\n  title: string;\n  src: string;\n};\n\ntype ImageGridProps = {\n  items: ImageItem[];\n};\n\nconst ImageGrid: React.FC<ImageGridProps> = ({ items }) => {\n  return (\n    <div className=\"image-grid-container\">\n      <div className=\"image-grid\">\n        {items.map((item) => (\n          <div key={item.id} className=\"image-item\">\n            <img className=\"image\" src={item.src} alt={item.title} />\n            <div className=\"image-description\">\n              <h3>{item.title}</h3>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ImageGrid;\n"],"names":[],"mappings":";;;;;;AAaA,MAAM,YAAsC,CAAC,EAAE,KAAK,EAAE;IACpD,qBACE,qKAAC;QAAI,WAAU;kBACb,cAAA,qKAAC;YAAI,WAAU;sBACZ,MAAM,GAAG,CAAC,CAAC,qBACV,qKAAC;oBAAkB,WAAU;;sCAC3B,qKAAC;4BAAI,WAAU;4BAAQ,KAAK,KAAK,GAAG;4BAAE,KAAK,KAAK,KAAK;;;;;;sCACrD,qKAAC;4BAAI,WAAU;sCACb,cAAA,qKAAC;0CAAI,KAAK,KAAK;;;;;;;;;;;;mBAHT,KAAK,EAAE;;;;;;;;;;;;;;;AAU3B;uCAEe"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///Users/darshan.he/temp/sam/frontend/src/styles/GlobalStyle.ts"],"sourcesContent":["// frontend/styles/GlobalStyle.ts\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: Arial, sans-serif;\n    background-color: #f9f9f9;\n  }\n`;\n\nexport default GlobalStyle;"],"names":[],"mappings":"AAAA,iCAAiC;;;;AACjC;;AAEA,MAAM,cAAc,iIAAA,CAAA,oBAAiB,CAAC;;;;;;AAMtC,CAAC;uCAEc"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///Users/darshan.he/temp/sam/frontend/src/pages/index.tsx"],"sourcesContent":["// frontend/pages/index.tsx\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ImageGrid from '../components/ImageGrid';\nimport GlobalStyle from '../styles/GlobalStyle';\n\ninterface Image {\n  id: string;\n  url: string;\n}\n\nconst Home: React.FC = () => {\n  const [images, setImages] = useState<Image[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const response = await axios.get<Image[]>('http://localhost:5000/images');\n        setImages(response.data);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n\n  const analyzeImage = async (url: string, id: string): Promise<string[]> => {\n    try {\n      setLoading(true);\n      const response = await axios.post<{ tags: string[] }>('http://localhost:5000/analyze', { url });\n      return response.data.tags;\n    } catch (error) {\n      console.error('Error analyzing image:', error);\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <h1 style={{ textAlign: 'center', margin: '20px 0' }}>Image Tagging App</h1>\n      {loading && <p style={{ textAlign: 'center' }}>Analyzing...</p>}\n      <ImageGrid images={images} onAnalyze={analyzeImage} />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;;AAC3B;AACA;AACA;AACA;;;;;;;;;;AAOA,MAAM,OAAiB;IACrB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAChD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,MAAM,WAAW,MAAM,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAU;gBAC1C,UAAU,SAAS,IAAI;YACzB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,0BAA0B;YAC1C;QACF;QACA;IACF,GAAG,EAAE;IAEL,MAAM,eAAe,OAAO,KAAa;QACvC,IAAI;YACF,WAAW;YACX,MAAM,WAAW,MAAM,0GAAA,CAAA,UAAK,CAAC,IAAI,CAAqB,iCAAiC;gBAAE;YAAI;YAC7F,OAAO,SAAS,IAAI,CAAC,IAAI;QAC3B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,EAAE;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE;;0BACE,qKAAC,qHAAA,CAAA,UAAW;;;;;0BACZ,qKAAC;gBAAG,OAAO;oBAAE,WAAW;oBAAU,QAAQ;gBAAS;0BAAG;;;;;;YACrD,yBAAW,qKAAC;gBAAE,OAAO;oBAAE,WAAW;gBAAS;0BAAG;;;;;;0BAC/C,qKAAC,wHAAA,CAAA,UAAS;gBAAC,QAAQ;gBAAQ,WAAW;;;;;;;;AAG5C;uCAEe"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}